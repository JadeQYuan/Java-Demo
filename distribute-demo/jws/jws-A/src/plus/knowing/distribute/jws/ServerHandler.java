
package plus.knowing.distribute.jws;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 *
 */
@WebService(name = "ServerHandler", targetNamespace = "http://ws.distribute.knowing.plus/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ServerHandler {


    /**
     *
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "method1", targetNamespace = "http://ws.distribute.knowing.plus/", className = "plus.knowing.distribute.ws.Method1")
    @ResponseWrapper(localName = "method1Response", targetNamespace = "http://ws.distribute.knowing.plus/", className = "plus.knowing.distribute.ws.Method1Response")
    @Action(input = "http://ws.distribute.knowing.plus/ServerHandler/method1Request", output = "http://ws.distribute.knowing.plus/ServerHandler/method1Response")
    public String method1();

    /**
     *
     * @param arg0
     * @return
     *     returns plus.knowing.distribute.ws.Dto
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "method2", targetNamespace = "http://ws.distribute.knowing.plus/", className = "plus.knowing.distribute.ws.Method2")
    @ResponseWrapper(localName = "method2Response", targetNamespace = "http://ws.distribute.knowing.plus/", className = "plus.knowing.distribute.ws.Method2Response")
    @Action(input = "http://ws.distribute.knowing.plus/ServerHandler/method2Request", output = "http://ws.distribute.knowing.plus/ServerHandler/method2Response")
    public Dto method2(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

}
